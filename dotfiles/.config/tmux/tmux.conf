# -*- mode: conf -*-

#          good defaults
set-option -g   base-index      1
set-option -g   pane-base-index 1

#          clipboard
set-option -g copy-command wl-copy
set-option -g mouse        on

set-option -g       default-command      /usr/bin/zsh
set-option -g       default-shell        /usr/bin/zsh

# looks
set-option -g       status               off
set-option -g       pane-border-status   off

set-option -g       update-environment SSH_AGENT_PID
set-option -g       update-environment SSH_AUTH_SOCK
set-option -g       update-environment DBUS_SESSION_BUS_ADDRESS
set-option -g       update-environment DISPLAY
set-option -g       update-environment WAYLAND_DISPLAY
set-option -g       update-environment EDITOR
set-option -g       update-environment LS_COLORS
set-option -g       update-environment FZF_API_KEY
set-option -g       update-environment JQ_COLORS
set-option -g       update-environment LS_COLORS

set-option -g       @wrong-reload-key-msg '**** C-Space C-r to source config ****'
set-option -g       @reload-msg           '**** Config reloaded ****'
set-option -g       @config-file  '~/.config/tmux/tmux.conf'
set-option -gw      xterm-keys           on
set-option -sa      terminal-features   ',rxvt-unicode-256color:clipboard:extkeys'
set-option -sa      terminal-overrides  ',xterm:Tc'


set-option -g       prefix C-Space
unbind-key -T       Space

unbind-key -T       prefix t
bind-key   -T       prefix r "source #{E:@config-file}"


bind-key     r       display-message '#{@wrong-reload-key-msg}'
bind-key     C-r     source-file     ~/.config/tmux/tmux.conf \; display-message '#{@reload-msg}'

bind-key     C-s     set synchronize-panes

bind-key -n  M-\]    select-window  -t'{previous}'
bind-key -n  M-\[    select-window  -t'{next}'

bind-key -n  M-Tab   select-pane    -t'{previous}'
bind-key -n  M-S-Tab select-pane    -t'{next}'

bind-key -n  C-\\    new-window     -c '#{pane_current_path}'
bind-key     C-l     clear-history \; display-message "**** Cleared ****"
bind-key     C-n     rotate-window

bind-key -n  M-\`   split-window -c '#{pane_current_path}' \
                                 -e FZF_DEFAULT_COMMAND='tmux capture-pane -t\! -e -p -S - | env LC_ALL=C grep .' -Z sh -c "fzf | tee ${HOME}/.tmux-buffer-$$ | wl-copy; notify-send Clipboard \"$(< ${HOME}/.tmux-buffer-$$)\"; (sed -zE 's/\n$//' | xargs -0 tmux send) <  ${HOME}/.tmux-buffer-$$"
bind-key -n  M-2    new-window \; send-keys "swaymsg -t get_tree | gron " Enter \; run-shell "sleep .5s" \; split-window  -Z  -c '#{pane_current_path}' -e FZF_DEFAULT_COMMAND='tmux capture-pane -t\! -e -p -S - | env LC_ALL=C grep .' sh -c "fzf --query 'json ' | tee ${HOME}/.tmux-buffer-gron-$$ | gron -u | tee ${HOME}/.tmux-buffer-ungron-$$ | wl-copy; notify-send Clipboard \"$(< ${HOME}/.tmux-buffer-gron-$$)\" "

bind-key -n  M-3    new-window\; send-keys "swaymsg -t get_tree | gron " Enter \; run-shell "sleep .5s" \; split-window  -Z  -c '#{pane_current_path}' -e FZF_DEFAULT_COMMAND='tmux capture-pane -t\! -e -p -S - | env LC_ALL=C grep .' sh -c "fzf --query 'json ' | wl-copy; sleep .3s ; notify-send Clipboard \"$(wl-paste)\" "

bind-key -n  M-4    run-shell 'swaymsg -t get_tree | gron'
